/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ebooksharing_susan;

/**
 *
 * @author indrajit
 *
 */

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JPanel;



public class BookUploadPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookUpload
     */
    public BookUploadPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BookUpload = new javax.swing.JPanel();
        BookAuthorTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        BookNameTextField = new javax.swing.JTextField();
        UploadcoverPageLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        UploadBookLabel = new javax.swing.JLabel();
        BrowseCoverpageButton = new javax.swing.JButton();
        BookSubmitButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        BookSummaryTextArea = new javax.swing.JTextArea();
        pointsTextField = new javax.swing.JTextField();
        BookBrowseButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bookpathprintlabel = new javax.swing.JTextField();
        coverpagepathprintLabel = new javax.swing.JTextField();

        jLabel5.setText("Points deserve");

        UploadcoverPageLabel.setText("Upload CoverPage");

        jLabel7.setText("Book Author");

        UploadBookLabel.setText("Upload Book");

        BrowseCoverpageButton.setText("Browse");
        BrowseCoverpageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseCoverpageButtonActionPerformed(evt);
            }
        });

        BookSubmitButton.setText("Submit");
        BookSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookSubmitButtonActionPerformed(evt);
            }
        });

        BookSummaryTextArea.setColumns(20);
        BookSummaryTextArea.setRows(5);
        jScrollPane9.setViewportView(BookSummaryTextArea);

        BookBrowseButton.setText("Browse");
        BookBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookBrowseButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Book Name");

        jLabel6.setText("Book Summary");

        javax.swing.GroupLayout BookUploadLayout = new javax.swing.GroupLayout(BookUpload);
        BookUpload.setLayout(BookUploadLayout);
        BookUploadLayout.setHorizontalGroup(
            BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookUploadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookUploadLayout.createSequentialGroup()
                        .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UploadcoverPageLabel)
                            .addComponent(UploadBookLabel)
                            .addComponent(jLabel5))
                        .addGap(61, 61, 61)
                        .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BookSubmitButton)
                            .addComponent(pointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BookUploadLayout.createSequentialGroup()
                                .addComponent(BookBrowseButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bookpathprintlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BookUploadLayout.createSequentialGroup()
                                .addComponent(BrowseCoverpageButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coverpagepathprintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(BookUploadLayout.createSequentialGroup()
                        .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(61, 61, 61)
                        .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BookAuthorTextField)
                                .addComponent(BookNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        BookUploadLayout.setVerticalGroup(
            BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookUploadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookAuthorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookUploadLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BrowseCoverpageButton)
                    .addComponent(UploadcoverPageLabel)
                    .addComponent(coverpagepathprintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BookUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UploadBookLabel)
                    .addComponent(BookBrowseButton)
                    .addComponent(bookpathprintlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(BookSubmitButton)
                .addGap(120, 120, 120))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(BookUpload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(BookUpload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BrowseCoverpageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseCoverpageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        Cover_filepath = file.getAbsolutePath();
        coverpagepathprintLabel.setText(Cover_filepath);
    }//GEN-LAST:event_BrowseCoverpageButtonActionPerformed

    private void BookSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookSubmitButtonActionPerformed
        // TODO add your handling code here:
        String B_name = BookNameTextField.getText();
        String A_name = BookAuthorTextField.getText();
        String B_summary = BookSummaryTextArea.getText();
        //String Uploadtext = UploaderNameTextField.getText();
        //String uploader_name = UploaderNameTextField.getText();
        String requestedPoints = pointsTextField.getText();
        int point = Integer.parseInt(requestedPoints);
        try {
            DbConnector dbc = new DbConnector();
            Connection conn = dbc.Connects();

            String sql = "INSERT INTO PendingBook (uploader, bookname, cover, author, summary, bookfile,  request_points, granted_points) "
            + "VALUES (?, ?, ?, ?, ?, ?, ?, " + 0 + ")";

            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, su_username);
            stmt.setString(2, B_name);
            File Cover_image = new File(Cover_filepath);
            FileInputStream Cover_page = new FileInputStream(Cover_image);
            stmt.setBinaryStream(3, Cover_page, (int) Cover_image.length());
            stmt.setString(4, A_name);
            stmt.setString(5, B_summary);
            File Book_image = new File(Book_filepath);
            FileInputStream Book_fis = new FileInputStream(Book_image);
            stmt.setBinaryStream(6, Book_fis, (int) Book_image.length());
            stmt.setInt(7, point);
            //stmt.setInt(8, B_summary);
            if (!B_name.isEmpty() && !A_name.isEmpty() && !B_summary.isEmpty()  && !Cover_filepath.equals("") && !Book_filepath.equals("") && !requestedPoints.isEmpty()) {

                Statement User_Stmt = conn.createStatement();
                String User_query = "Select bookname, author, uploader from PendingBook";
                ResultSet User_result = User_Stmt.executeQuery(User_query);
                boolean checkmatch = false;
                boolean usernotfound = false;
                boolean copyrightcheck = false;

                boolean UT = false;
                //                if (!UserNameText.isEmpty() && !PassWordText.isEmpty()) {
                    while (User_result.next()) {
                        String BookN = User_result.getString("bookname");
                        String AuthorN = User_result.getString("author");
                        String uploaderN = User_result.getString("uploader");//should find uploader username from UserInfo table for now its from Bookpending

                        if (BookN.equalsIgnoreCase(B_name) && AuthorN.equalsIgnoreCase(A_name) && uploaderN.equalsIgnoreCase(uploader_name)) {
                            checkmatch = true;
                        }
                        if (BookN.equalsIgnoreCase(B_name) && AuthorN.equalsIgnoreCase(A_name) && !uploader_name.equals(uploaderN)) {
                            copyrightcheck = true;

                            //cancel();
                        }
                        //                    if (!uploader_name.equals(uploaderN)) {
                            //                        usernotfound = true;
                            //
                            //                    }
                    }
                    //                if (usernotfound) {
                        //                    JOptionPane.showMessageDialog(null, "UserName not registered");
                        //                    //cancel();
                        //                } else {
                        if (checkmatch) {
                            JOptionPane.showMessageDialog(null, "Repeated submission book is prohibited");
                            //cancel();

                        }
                        else if (copyrightcheck) {
                            final JPanel panel = new JPanel();
                            showMessageDialog(panel, "Copyright Issue", "Warning",
                                JOptionPane.WARNING_MESSAGE);
                        } else {
                            //}
                        stmt.execute();

                        conn.commit();
                        conn.close();
                        JOptionPane.showMessageDialog(null, "Book submission succcessful.", "Congratulations",  JOptionPane.OK_OPTION);
                        cancel();
                        HomeFrame AH = new HomeFrame();
                        AH.setVisible(true);
                    }
                    //}
            } else {
                JOptionPane.showMessageDialog(null, "All field needs to be filled out.");
            }
            Cover_page.close();
            Book_fis.close();
        } catch (SQLException | HeadlessException | IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());

        }
    }//GEN-LAST:event_BookSubmitButtonActionPerformed

    private void BookBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookBrowseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        Book_filepath = file.getAbsolutePath();
        bookpathprintlabel.setText(Book_filepath);
    }//GEN-LAST:event_BookBrowseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookAuthorTextField;
    private javax.swing.JButton BookBrowseButton;
    private javax.swing.JTextField BookNameTextField;
    private javax.swing.JButton BookSubmitButton;
    private javax.swing.JTextArea BookSummaryTextArea;
    private javax.swing.JPanel BookUpload;
    private javax.swing.JButton BrowseCoverpageButton;
    private javax.swing.JLabel UploadBookLabel;
    private javax.swing.JLabel UploadcoverPageLabel;
    private javax.swing.JTextField bookpathprintlabel;
    private javax.swing.JTextField coverpagepathprintLabel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField pointsTextField;
    // End of variables declaration//GEN-END:variables


 public void cancel() {
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }
}
